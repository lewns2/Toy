{"ast":null,"code":"var _jsxFileName = \"/Users/donghyun/Desktop/lewns2/src/pages/CarListPage/CarDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = `http://localhost:8080/carClasses/2`;\nexport const CarDetail = props => {\n  _s();\n\n  const [detailInfo, setDetailInfo] = useState([]);\n  const [isPending, setIsPending] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [prevSelect, setPrevSelect] = useState(); // 이전에 선택했던 항목을 다시 선택하게 되면, 변화가 없으므로 로드하지 않는다...\n\n  useEffect(() => {\n    setPrevSelect(props.carId);\n  }, [props.carId]);\n  useEffect(() => {\n    // 모달이 닫힌 경우, 로딩과 성공 여부 초기화\n    if (!props.showModal) {\n      setIsPending(false);\n      setIsSuccess(false);\n    } // 이전에 선택했던 항목과 똑같은 항목을 선택한 경우, 가지고 있던 데이터를 보여준다. -> 로딩의 절차만 없어짐 : 이전 결과 성공 : 데이터 O ? 데이터X(isSucess가 실패로 되어 있음)\n    else if (props.showModal && prevSelect === props.carId) {\n      setIsPending(true);\n    } // 이전 선택과 다른 항목 선택 시, 요청을 통해 데이터를 받아온다.\n    else if (props.showModal && prevSelect !== props.carId) {\n      loadDetailInfo();\n    }\n  }, [props.showModal]);\n\n  const loadDetailInfo = async () => {\n    try {\n      let res = await axios.get(`${url}/${props.carId}`);\n      setDetailInfo(res.data);\n      setIsPending(true);\n      setIsSuccess(true);\n    } catch (err) {\n      setIsPending(true);\n      setIsSuccess(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isPending ? isSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: detailInfo && detailInfo.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.carImage,\n          alt: `${item.carClassName} 차량`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }, this), item.carClassName, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC81C\\uC870\\uC0AC : \", item.maker]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uBD84\\uB958 : \", item.carModel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC5F0\\uB8CC : \", item.fuel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uBCC0\\uC18D\\uBC29\\uC2DD : \", item.gearbox]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC2B9\\uCC28\\uC815\\uC6D0 : \", item.capacity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this), \"\\uC548\\uC804 \\uC635\\uC158\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.safetyOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this), \"\\uD3B8\\uC758 \\uC635\\uC158\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.additionalOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Error...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(CarDetail, \"hjvUt4PrIrvIk7lEp1cc0VRtuBg=\");\n\n_c = CarDetail;\nexport default CarDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"CarDetail\");","map":{"version":3,"names":["useState","useEffect","axios","url","CarDetail","props","detailInfo","setDetailInfo","isPending","setIsPending","isSuccess","setIsSuccess","prevSelect","setPrevSelect","carId","showModal","loadDetailInfo","res","get","data","err","map","item","idx","carImage","carClassName","maker","carModel","fuel","gearbox","capacity","safetyOption","additionalOption"],"sources":["/Users/donghyun/Desktop/lewns2/src/pages/CarListPage/CarDetail.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst url = `http://localhost:8080/carClasses/2`;\n\nexport const CarDetail = (props) => {\n  const [detailInfo, setDetailInfo] = useState([]);\n  const [isPending, setIsPending] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [prevSelect, setPrevSelect] = useState();\n\n  // 이전에 선택했던 항목을 다시 선택하게 되면, 변화가 없으므로 로드하지 않는다...\n  useEffect(() => {\n    setPrevSelect(props.carId);\n  }, [props.carId]);\n\n  useEffect(() => {\n    // 모달이 닫힌 경우, 로딩과 성공 여부 초기화\n    if (!props.showModal) {\n      setIsPending(false);\n      setIsSuccess(false);\n    }\n    // 이전에 선택했던 항목과 똑같은 항목을 선택한 경우, 가지고 있던 데이터를 보여준다. -> 로딩의 절차만 없어짐 : 이전 결과 성공 : 데이터 O ? 데이터X(isSucess가 실패로 되어 있음)\n    else if (props.showModal && prevSelect === props.carId) {\n      setIsPending(true);\n    }\n    // 이전 선택과 다른 항목 선택 시, 요청을 통해 데이터를 받아온다.\n    else if (props.showModal && prevSelect !== props.carId) {\n      loadDetailInfo();\n    }\n  }, [props.showModal]);\n\n  const loadDetailInfo = async () => {\n    try {\n      let res = await axios.get(`${url}/${props.carId}`);\n      setDetailInfo(res.data);\n      setIsPending(true);\n      setIsSuccess(true);\n    } catch (err) {\n      setIsPending(true);\n      setIsSuccess(false);\n    }\n  };\n\n  return (\n    <>\n      {isPending ? (\n        isSuccess ? (\n          <div>\n            {detailInfo &&\n              detailInfo.map((item, idx) => (\n                <div key={idx}>\n                  <img src={item.carImage} alt={`${item.carClassName} 차량`} />\n                  {item.carClassName}\n                  <p>제조사 : {item.maker}</p>\n                  <p>분류 : {item.carModel}</p>\n                  <p>연료 : {item.fuel}</p>\n                  <p>변속방식 : {item.gearbox}</p>\n                  <p>승차정원 : {item.capacity}</p>\n                  안전 옵션\n                  <p>{item.safetyOption}</p>\n                  편의 옵션\n                  <p>{item.additionalOption}</p>\n                </div>\n              ))}\n          </div>\n        ) : (\n          <div>\n            <h1>Error...</h1>\n          </div>\n        )\n      ) : (\n        <div>\n          <h1>Loading...</h1>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default CarDetail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}