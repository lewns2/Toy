{"ast":null,"code":"import _regeneratorRuntime from\"/Users/donghyun/Desktop/lewns2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/donghyun/Desktop/lewns2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/donghyun/Desktop/lewns2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import axios from'axios';import ModalContent from'../../components/ModalContent';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var url=\"http://localhost:8080/carClasses\";export var CarDetail=function CarDetail(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),detailInfo=_useState2[0],setDetailInfo=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isPending=_useState4[0],setIsPending=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isSuccess=_useState6[0],setIsSuccess=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),prevSelect=_useState8[0],setPrevSelect=_useState8[1];// 이전에 선택했던 항목 기록\nuseEffect(function(){setPrevSelect(props.carId);},[props.carId]);useEffect(function(){// 모달이 닫힌 경우, 로딩 여부 초기화 (성공 여부를 초기화하게 되면 이전에 성공,실패했는 지를 알 수 없으므로 초기화하지 않는다.)\nif(!props.showModal){setIsPending(false);}// 이전에 선택했던 항목과 똑같은 항목을 선택한 경우, 가지고 있던 데이터를 보여준다. -> 로딩의 절차만 없어짐 : 이전 결과 성공인 경우 가진 데이터 렌더링, 실패인 경우(isSucess가 실패로 되어 있음) 에러 출력\nelse if(props.showModal&&prevSelect===props.carId){setIsPending(true);}// 이전 선택과 다른 항목 선택 시, 요청을 통해 데이터를 받아온다.\nelse if(props.showModal&&prevSelect!==props.carId){loadDetailInfo();}},[props.showModal]);var loadDetailInfo=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"\".concat(url,\"/\").concat(props.carId));case 3:res=_context.sent;setDetailInfo(res.data);setIsPending(true);setIsSuccess(true);_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);setIsPending(true);setIsSuccess(false);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function loadDetailInfo(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(_Fragment,{children:isPending?isSuccess?/*#__PURE__*/_jsx(\"div\",{children:detailInfo&&detailInfo.map(function(item,idx){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ModalContent,{carImage:item.carImage,carClassName:item.carClassName,maker:item.maker,carModel:item.carModel,fuel:item.fuel,gearbox:item.gearbox,capacity:item.capacity,safetyOption:item.safetyOption,additionalOption:item.additionalOption})},idx);})}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Error...\"})}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Loading...\"})})});};export default CarDetail;","map":{"version":3,"names":["useState","useEffect","axios","ModalContent","url","CarDetail","props","detailInfo","setDetailInfo","isPending","setIsPending","isSuccess","setIsSuccess","prevSelect","setPrevSelect","carId","showModal","loadDetailInfo","get","res","data","map","item","idx","carImage","carClassName","maker","carModel","fuel","gearbox","capacity","safetyOption","additionalOption"],"sources":["/Users/donghyun/Desktop/lewns2/src/pages/CarListPage/CarDetail.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ModalContent from '../../components/ModalContent';\n\nconst url = `http://localhost:8080/carClasses`;\n\nexport const CarDetail = (props) => {\n  const [detailInfo, setDetailInfo] = useState([]);\n  const [isPending, setIsPending] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [prevSelect, setPrevSelect] = useState();\n\n  // 이전에 선택했던 항목 기록\n  useEffect(() => {\n    setPrevSelect(props.carId);\n  }, [props.carId]);\n\n  useEffect(() => {\n    // 모달이 닫힌 경우, 로딩 여부 초기화 (성공 여부를 초기화하게 되면 이전에 성공,실패했는 지를 알 수 없으므로 초기화하지 않는다.)\n    if (!props.showModal) {\n      setIsPending(false);\n    }\n    // 이전에 선택했던 항목과 똑같은 항목을 선택한 경우, 가지고 있던 데이터를 보여준다. -> 로딩의 절차만 없어짐 : 이전 결과 성공인 경우 가진 데이터 렌더링, 실패인 경우(isSucess가 실패로 되어 있음) 에러 출력\n    else if (props.showModal && prevSelect === props.carId) {\n      setIsPending(true);\n    }\n    // 이전 선택과 다른 항목 선택 시, 요청을 통해 데이터를 받아온다.\n    else if (props.showModal && prevSelect !== props.carId) {\n      loadDetailInfo();\n    }\n  }, [props.showModal]);\n\n  const loadDetailInfo = async () => {\n    try {\n      let res = await axios.get(`${url}/${props.carId}`);\n      setDetailInfo(res.data);\n      setIsPending(true);\n      setIsSuccess(true);\n    } catch (err) {\n      setIsPending(true);\n      setIsSuccess(false);\n    }\n  };\n\n  return (\n    <>\n      {isPending ? (\n        isSuccess ? (\n          <div>\n            {detailInfo &&\n              detailInfo.map((item, idx) => (\n                <div key={idx}>\n                  <ModalContent\n                    carImage={item.carImage}\n                    carClassName={item.carClassName}\n                    maker={item.maker}\n                    carModel={item.carModel}\n                    fuel={item.fuel}\n                    gearbox={item.gearbox}\n                    capacity={item.capacity}\n                    safetyOption={item.safetyOption}\n                    additionalOption={item.additionalOption}></ModalContent>\n                </div>\n              ))}\n          </div>\n        ) : (\n          <div>\n            <h1>Error...</h1>\n          </div>\n        )\n      ) : (\n        <div>\n          <h1>Loading...</h1>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default CarDetail;\n"],"mappings":"4WAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,MAAP,KAAkB,OAAlB,CACA,MAAOC,aAAP,KAAyB,+BAAzB,C,gGAEA,GAAMC,IAAG,mCAAT,CAEA,MAAO,IAAMC,UAAS,CAAG,QAAZA,UAAY,CAACC,KAAD,CAAW,CAClC,cAAoCN,QAAQ,CAAC,EAAD,CAA5C,wCAAOO,UAAP,eAAmBC,aAAnB,eACA,eAAkCR,QAAQ,CAAC,KAAD,CAA1C,yCAAOS,SAAP,eAAkBC,YAAlB,eACA,eAAkCV,QAAQ,CAAC,KAAD,CAA1C,yCAAOW,SAAP,eAAkBC,YAAlB,eACA,eAAoCZ,QAAQ,EAA5C,yCAAOa,UAAP,eAAmBC,aAAnB,eAEA;AACAb,SAAS,CAAC,UAAM,CACda,aAAa,CAACR,KAAK,CAACS,KAAP,CAAb,CACD,CAFQ,CAEN,CAACT,KAAK,CAACS,KAAP,CAFM,CAAT,CAIAd,SAAS,CAAC,UAAM,CACd;AACA,GAAI,CAACK,KAAK,CAACU,SAAX,CAAsB,CACpBN,YAAY,CAAC,KAAD,CAAZ,CACD,CACD;AAHA,IAIK,IAAIJ,KAAK,CAACU,SAAN,EAAmBH,UAAU,GAAKP,KAAK,CAACS,KAA5C,CAAmD,CACtDL,YAAY,CAAC,IAAD,CAAZ,CACD,CACD;AAHK,IAIA,IAAIJ,KAAK,CAACU,SAAN,EAAmBH,UAAU,GAAKP,KAAK,CAACS,KAA5C,CAAmD,CACtDE,cAAc,GACf,CACF,CAbQ,CAaN,CAACX,KAAK,CAACU,SAAP,CAbM,CAAT,CAeA,GAAMC,eAAc,4FAAG,mLAEHf,MAAK,CAACgB,GAAN,WAAad,GAAb,aAAoBE,KAAK,CAACS,KAA1B,EAFG,QAEfI,GAFe,eAGnBX,aAAa,CAACW,GAAG,CAACC,IAAL,CAAb,CACAV,YAAY,CAAC,IAAD,CAAZ,CACAE,YAAY,CAAC,IAAD,CAAZ,CALmB,+EAOnBF,YAAY,CAAC,IAAD,CAAZ,CACAE,YAAY,CAAC,KAAD,CAAZ,CARmB,oEAAH,kBAAdK,eAAc,0CAApB,CAYA,mBACE,yBACGR,SAAS,CACRE,SAAS,cACP,qBACGJ,UAAU,EACTA,UAAU,CAACc,GAAX,CAAe,SAACC,IAAD,CAAOC,GAAP,qBACb,kCACE,KAAC,YAAD,EACE,QAAQ,CAAED,IAAI,CAACE,QADjB,CAEE,YAAY,CAAEF,IAAI,CAACG,YAFrB,CAGE,KAAK,CAAEH,IAAI,CAACI,KAHd,CAIE,QAAQ,CAAEJ,IAAI,CAACK,QAJjB,CAKE,IAAI,CAAEL,IAAI,CAACM,IALb,CAME,OAAO,CAAEN,IAAI,CAACO,OANhB,CAOE,QAAQ,CAAEP,IAAI,CAACQ,QAPjB,CAQE,YAAY,CAAER,IAAI,CAACS,YARrB,CASE,gBAAgB,CAAET,IAAI,CAACU,gBATzB,EADF,EAAUT,GAAV,CADa,EAAf,CAFJ,EADO,cAmBP,kCACE,gCADF,EApBM,cAyBR,kCACE,kCADF,EA1BJ,EADF,CAiCD,CAvEM,CAyEP,cAAelB,UAAf"},"metadata":{},"sourceType":"module"}