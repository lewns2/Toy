{"ast":null,"code":"var _jsxFileName = \"/Users/donghyun/Desktop/lewns2/src/pages/CarListPage/Products.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Card from '../../components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Products = props => {\n  _s();\n\n  const [infos, setInfos] = useState([]);\n  const [type, setType] = useState();\n  const [carouselWidth, setCarouselWidth] = useState();\n  /* 공통 컴포넌트로 사용하면서 특가 차량과 모든 차량을 보여주는 것에 대한 분기 */\n\n  useEffect(() => {\n    if (props.type === 'allList') {\n      setType('allList');\n      setInfos(props.items.slice(0, props.offset * 5));\n    } else if (props.type === 'specialPriceList') {\n      setType('specialPriceList');\n      const result = [];\n      props.items.map(item => {\n        var findSpecialPrice = item.carTypeTags.includes('특가');\n\n        if (findSpecialPrice) {\n          result.push(item);\n        }\n\n        setInfos(result);\n        setCarouselWidth(props.carouselWidth - 60);\n        props.setCarouselSize(result.length);\n        console.log(carouselWidth);\n        return result;\n      });\n    }\n  }, [props]);\n  /* 가격 : 10자리에서 반올림 후, 3자리마다 콤마로 구분 */\n\n  const setPrice = olderPrice => {\n    olderPrice = Math.round(olderPrice / 10) * 10;\n    let newPrice = olderPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ',');\n    return String(newPrice);\n  };\n  /* 거리 : 1000 이상은 천, 10000 이상은 만으로 표기 / 테스트를 위해 String으로 형변환 */\n\n\n  const setDistance = olderDistance => {\n    if (olderDistance >= 10000) {\n      olderDistance /= 10000;\n      return String(olderDistance + '만');\n    } else if (olderDistance < 10000 && olderDistance >= 1000) {\n      olderDistance /= 1000;\n      return String(olderDistance + '천');\n    }\n\n    return String(olderDistance);\n  };\n  /* 지역 : '/' -> ', ' 치환 &&  ',' ->  ', '로 치환 */\n\n\n  const setRegionGroups = olderRegion => {\n    let newRegion = olderRegion.toString().replace(/\\/|,/gi, ', ');\n    return newRegion;\n  }; // 빠른 대여, 인기, 특가 등 종류에 따라 다른 디자인을 하기 위해 정규 표현식 대신 for문을 통해 작성\n\n\n  const setTags = olderTags => {\n    const newTags = [];\n\n    for (let i = 0; i < olderTags.length; i++) {\n      newTags.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        id: olderTags[i],\n        children: olderTags[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this));\n    }\n\n    return newTags;\n  }; // 하단 표기 정보 길이를 찾기 위해 String 형 변환 => 차량 캐러셀이면서 길이가 20이 넘는다면 '...' 스타일 적용\n\n\n  const setBottomInfomations = (year, dist, region) => {\n    const newBottomInfomations = year + '년 | ' + dist + 'km | ' + region;\n\n    if (type === 'specialPriceList' && newBottomInfomations.length > 20) {\n      return /*#__PURE__*/_jsxDEV(Card.OverBottomInfo, {\n        children: newBottomInfomations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }, this);\n    } else {\n      return newBottomInfomations;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: infos && infos.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      children: /*#__PURE__*/_jsxDEV(Card.Outline, {\n        style: {\n          width: type === 'specialPriceList' ? `${carouselWidth}px` : '',\n          display: type === 'specialPriceList' ? `grid` : '',\n          justifyItems: type === 'specialPriceList' ? `center` : ''\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: type === 'specialPriceList' ? `60%` : ''\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            src: item.image,\n            alt: `${item.carClassName} 차량`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Wrapper, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.carClassName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this), type === 'specialPriceList' ? '' : /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: setTags(item.carTypeTags)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Price, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                \"data-testid\": \"price-text\",\n                children: [setPrice(item.price), \"\\uC6D0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this), \"\\xA0\", item.discountPercent === 0 ? '' : /*#__PURE__*/_jsxDEV(\"p\", {\n                \"data-testid\": \"discountPercent-text\",\n                children: [\"(-\", item.discountPercent, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.BottomInfo, {\n              children: setBottomInfomations(item.year, setDistance(item.drivingDistance), setRegionGroups(item.regionGroups))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, item.carClassId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n};\n\n_s(Products, \"MrrjPF+YrZip4E916xi/48WFq/8=\");\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["useEffect","useState","Card","Products","props","infos","setInfos","type","setType","carouselWidth","setCarouselWidth","items","slice","offset","result","map","item","findSpecialPrice","carTypeTags","includes","push","setCarouselSize","length","console","log","setPrice","olderPrice","Math","round","newPrice","toString","replace","String","setDistance","olderDistance","setRegionGroups","olderRegion","newRegion","setTags","olderTags","newTags","i","setBottomInfomations","year","dist","region","newBottomInfomations","width","display","justifyItems","image","carClassName","price","discountPercent","drivingDistance","regionGroups","carClassId"],"sources":["/Users/donghyun/Desktop/lewns2/src/pages/CarListPage/Products.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Card from '../../components/Card';\n\nexport const Products = (props) => {\n  const [infos, setInfos] = useState([]);\n  const [type, setType] = useState();\n\n  const [carouselWidth, setCarouselWidth] = useState();\n\n  /* 공통 컴포넌트로 사용하면서 특가 차량과 모든 차량을 보여주는 것에 대한 분기 */\n  useEffect(() => {\n    if (props.type === 'allList') {\n      setType('allList');\n      setInfos(props.items.slice(0, props.offset * 5));\n    } else if (props.type === 'specialPriceList') {\n      setType('specialPriceList');\n\n      const result = [];\n\n      props.items.map((item) => {\n        var findSpecialPrice = item.carTypeTags.includes('특가');\n        if (findSpecialPrice) {\n          result.push(item);\n        }\n        setInfos(result);\n\n        setCarouselWidth(props.carouselWidth - 60);\n        props.setCarouselSize(result.length);\n        console.log(carouselWidth);\n        return result;\n      });\n    }\n  }, [props]);\n\n  /* 가격 : 10자리에서 반올림 후, 3자리마다 콤마로 구분 */\n  const setPrice = (olderPrice) => {\n    olderPrice = Math.round(olderPrice / 10) * 10;\n    let newPrice = olderPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ',');\n    return String(newPrice);\n  };\n\n  /* 거리 : 1000 이상은 천, 10000 이상은 만으로 표기 / 테스트를 위해 String으로 형변환 */\n  const setDistance = (olderDistance) => {\n    if (olderDistance >= 10000) {\n      olderDistance /= 10000;\n\n      return String(olderDistance + '만');\n    } else if (olderDistance < 10000 && olderDistance >= 1000) {\n      olderDistance /= 1000;\n\n      return String(olderDistance + '천');\n    }\n\n    return String(olderDistance);\n  };\n\n  /* 지역 : '/' -> ', ' 치환 &&  ',' ->  ', '로 치환 */\n  const setRegionGroups = (olderRegion) => {\n    let newRegion = olderRegion.toString().replace(/\\/|,/gi, ', ');\n    return newRegion;\n  };\n\n  // 빠른 대여, 인기, 특가 등 종류에 따라 다른 디자인을 하기 위해 정규 표현식 대신 for문을 통해 작성\n  const setTags = (olderTags) => {\n    const newTags = [];\n    for (let i = 0; i < olderTags.length; i++) {\n      newTags.push(\n        <p id={olderTags[i]} key={i}>\n          {olderTags[i]}\n        </p>,\n      );\n    }\n    return newTags;\n  };\n\n  // 하단 표기 정보 길이를 찾기 위해 String 형 변환 => 차량 캐러셀이면서 길이가 20이 넘는다면 '...' 스타일 적용\n  const setBottomInfomations = (year, dist, region) => {\n    const newBottomInfomations = year + '년 | ' + dist + 'km | ' + region;\n\n    if (type === 'specialPriceList' && newBottomInfomations.length > 20) {\n      return <Card.OverBottomInfo>{newBottomInfomations}</Card.OverBottomInfo>;\n    } else {\n      return newBottomInfomations;\n    }\n  };\n\n  return (\n    <>\n      {infos &&\n        infos.map((item) => (\n          <div key={item.carClassId} style={{}}>\n            <Card.Outline\n              style={{\n                width: type === 'specialPriceList' ? `${carouselWidth}px` : '',\n                display: type === 'specialPriceList' ? `grid` : '',\n                justifyItems: type === 'specialPriceList' ? `center` : '',\n              }}>\n              <div\n                style={{\n                  width: type === 'specialPriceList' ? `60%` : '',\n                }}>\n                <Card.Img src={item.image} alt={`${item.carClassName} 차량`} />\n\n                <Card.Wrapper>\n                  <Card.Title>\n                    <p>{item.carClassName}</p>\n                    {type === 'specialPriceList' ? '' : <h5>{setTags(item.carTypeTags)}</h5>}\n                  </Card.Title>\n\n                  <Card.Price>\n                    <p data-testid=\"price-text\">{setPrice(item.price)}원</p>\n                    &nbsp;\n                    {item.discountPercent === 0 ? (\n                      ''\n                    ) : (\n                      <p data-testid=\"discountPercent-text\">(-{item.discountPercent}%)</p>\n                    )}\n                  </Card.Price>\n\n                  <Card.BottomInfo>\n                    {setBottomInfomations(\n                      item.year,\n                      setDistance(item.drivingDistance),\n                      setRegionGroups(item.regionGroups),\n                    )}\n                  </Card.BottomInfo>\n                </Card.Wrapper>\n              </div>\n            </Card.Outline>\n          </div>\n        ))}\n    </>\n  );\n};\n\nexport default Products;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EACjC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;EAEA,MAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,EAAlD;EAEA;;EACAD,SAAS,CAAC,MAAM;IACd,IAAII,KAAK,CAACG,IAAN,KAAe,SAAnB,EAA8B;MAC5BC,OAAO,CAAC,SAAD,CAAP;MACAF,QAAQ,CAACF,KAAK,CAACO,KAAN,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBR,KAAK,CAACS,MAAN,GAAe,CAApC,CAAD,CAAR;IACD,CAHD,MAGO,IAAIT,KAAK,CAACG,IAAN,KAAe,kBAAnB,EAAuC;MAC5CC,OAAO,CAAC,kBAAD,CAAP;MAEA,MAAMM,MAAM,GAAG,EAAf;MAEAV,KAAK,CAACO,KAAN,CAAYI,GAAZ,CAAiBC,IAAD,IAAU;QACxB,IAAIC,gBAAgB,GAAGD,IAAI,CAACE,WAAL,CAAiBC,QAAjB,CAA0B,IAA1B,CAAvB;;QACA,IAAIF,gBAAJ,EAAsB;UACpBH,MAAM,CAACM,IAAP,CAAYJ,IAAZ;QACD;;QACDV,QAAQ,CAACQ,MAAD,CAAR;QAEAJ,gBAAgB,CAACN,KAAK,CAACK,aAAN,GAAsB,EAAvB,CAAhB;QACAL,KAAK,CAACiB,eAAN,CAAsBP,MAAM,CAACQ,MAA7B;QACAC,OAAO,CAACC,GAAR,CAAYf,aAAZ;QACA,OAAOK,MAAP;MACD,CAXD;IAYD;EACF,CAtBQ,EAsBN,CAACV,KAAD,CAtBM,CAAT;EAwBA;;EACA,MAAMqB,QAAQ,GAAIC,UAAD,IAAgB;IAC/BA,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWF,UAAU,GAAG,EAAxB,IAA8B,EAA3C;IACA,IAAIG,QAAQ,GAAGH,UAAU,CAACI,QAAX,GAAsBC,OAAtB,CAA8B,iCAA9B,EAAiE,GAAjE,CAAf;IACA,OAAOC,MAAM,CAACH,QAAD,CAAb;EACD,CAJD;EAMA;;;EACA,MAAMI,WAAW,GAAIC,aAAD,IAAmB;IACrC,IAAIA,aAAa,IAAI,KAArB,EAA4B;MAC1BA,aAAa,IAAI,KAAjB;MAEA,OAAOF,MAAM,CAACE,aAAa,GAAG,GAAjB,CAAb;IACD,CAJD,MAIO,IAAIA,aAAa,GAAG,KAAhB,IAAyBA,aAAa,IAAI,IAA9C,EAAoD;MACzDA,aAAa,IAAI,IAAjB;MAEA,OAAOF,MAAM,CAACE,aAAa,GAAG,GAAjB,CAAb;IACD;;IAED,OAAOF,MAAM,CAACE,aAAD,CAAb;EACD,CAZD;EAcA;;;EACA,MAAMC,eAAe,GAAIC,WAAD,IAAiB;IACvC,IAAIC,SAAS,GAAGD,WAAW,CAACN,QAAZ,GAAuBC,OAAvB,CAA+B,QAA/B,EAAyC,IAAzC,CAAhB;IACA,OAAOM,SAAP;EACD,CAHD,CAtDiC,CA2DjC;;;EACA,MAAMC,OAAO,GAAIC,SAAD,IAAe;IAC7B,MAAMC,OAAO,GAAG,EAAhB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACjB,MAA9B,EAAsCmB,CAAC,EAAvC,EAA2C;MACzCD,OAAO,CAACpB,IAAR,eACE;QAAG,EAAE,EAAEmB,SAAS,CAACE,CAAD,CAAhB;QAAA,UACGF,SAAS,CAACE,CAAD;MADZ,GAA0BA,CAA1B;QAAA;QAAA;QAAA;MAAA,QADF;IAKD;;IACD,OAAOD,OAAP;EACD,CAVD,CA5DiC,CAwEjC;;;EACA,MAAME,oBAAoB,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,MAAb,KAAwB;IACnD,MAAMC,oBAAoB,GAAGH,IAAI,GAAG,MAAP,GAAgBC,IAAhB,GAAuB,OAAvB,GAAiCC,MAA9D;;IAEA,IAAItC,IAAI,KAAK,kBAAT,IAA+BuC,oBAAoB,CAACxB,MAArB,GAA8B,EAAjE,EAAqE;MACnE,oBAAO,QAAC,IAAD,CAAM,cAAN;QAAA,UAAsBwB;MAAtB;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFD,MAEO;MACL,OAAOA,oBAAP;IACD;EACF,CARD;;EAUA,oBACE;IAAA,UACGzC,KAAK,IACJA,KAAK,CAACU,GAAN,CAAWC,IAAD,iBACR;MAA2B,KAAK,EAAE,EAAlC;MAAA,uBACE,QAAC,IAAD,CAAM,OAAN;QACE,KAAK,EAAE;UACL+B,KAAK,EAAExC,IAAI,KAAK,kBAAT,GAA+B,GAAEE,aAAc,IAA/C,GAAqD,EADvD;UAELuC,OAAO,EAAEzC,IAAI,KAAK,kBAAT,GAA+B,MAA/B,GAAuC,EAF3C;UAGL0C,YAAY,EAAE1C,IAAI,KAAK,kBAAT,GAA+B,QAA/B,GAAyC;QAHlD,CADT;QAAA,uBAME;UACE,KAAK,EAAE;YACLwC,KAAK,EAAExC,IAAI,KAAK,kBAAT,GAA+B,KAA/B,GAAsC;UADxC,CADT;UAAA,wBAIE,QAAC,IAAD,CAAM,GAAN;YAAU,GAAG,EAAES,IAAI,CAACkC,KAApB;YAA2B,GAAG,EAAG,GAAElC,IAAI,CAACmC,YAAa;UAArD;YAAA;YAAA;YAAA;UAAA,QAJF,eAME,QAAC,IAAD,CAAM,OAAN;YAAA,wBACE,QAAC,IAAD,CAAM,KAAN;cAAA,wBACE;gBAAA,UAAInC,IAAI,CAACmC;cAAT;gBAAA;gBAAA;gBAAA;cAAA,QADF,EAEG5C,IAAI,KAAK,kBAAT,GAA8B,EAA9B,gBAAmC;gBAAA,UAAK+B,OAAO,CAACtB,IAAI,CAACE,WAAN;cAAZ;gBAAA;gBAAA;gBAAA;cAAA,QAFtC;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAME,QAAC,IAAD,CAAM,KAAN;cAAA,wBACE;gBAAG,eAAY,YAAf;gBAAA,WAA6BO,QAAQ,CAACT,IAAI,CAACoC,KAAN,CAArC;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,UAGGpC,IAAI,CAACqC,eAAL,KAAyB,CAAzB,GACC,EADD,gBAGC;gBAAG,eAAY,sBAAf;gBAAA,iBAAyCrC,IAAI,CAACqC,eAA9C;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QANJ;YAAA;cAAA;cAAA;cAAA;YAAA,QANF,eAgBE,QAAC,IAAD,CAAM,UAAN;cAAA,UACGX,oBAAoB,CACnB1B,IAAI,CAAC2B,IADc,EAEnBV,WAAW,CAACjB,IAAI,CAACsC,eAAN,CAFQ,EAGnBnB,eAAe,CAACnB,IAAI,CAACuC,YAAN,CAHI;YADvB;cAAA;cAAA;cAAA;YAAA,QAhBF;UAAA;YAAA;YAAA;YAAA;UAAA,QANF;QAAA;UAAA;UAAA;UAAA;QAAA;MANF;QAAA;QAAA;QAAA;MAAA;IADF,GAAUvC,IAAI,CAACwC,UAAf;MAAA;MAAA;MAAA;IAAA,QADF;EAFJ,iBADF;AA+CD,CAlIM;;GAAMrD,Q;;KAAAA,Q;AAoIb,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}