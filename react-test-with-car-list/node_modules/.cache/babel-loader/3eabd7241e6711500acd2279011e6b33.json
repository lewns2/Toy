{"ast":null,"code":"import axios from 'axios';\nconst url = `http://localhost:8080/carClasses`;\nexport function handleModalContent(props, setIsPending, prevSelect, setDetailInfo, setIsSuccess) {\n  // 모달이 닫힌 경우, 로딩 여부 초기화 (성공 여부를 초기화하게 되면 이전에 성공,실패했는 지를 알 수 없으므로 초기화하지 않는다.)\n  if (!props.showModal) {\n    setIsPending(false);\n  } // 이전에 선택했던 항목과 똑같은 항목을 선택한 경우, 가지고 있던 데이터를 보여준다. -> 로딩의 절차만 없어짐 : 이전 결과 성공인 경우 가진 데이터 렌더링, 실패인 경우(isSucess가 실패로 되어 있음) 에러 출력\n  else if (props.showModal && prevSelect === props.carId) {\n    setIsPending(true);\n  } // 이전 선택과 다른 항목 선택 시, 요청을 통해 데이터를 받아온다.\n  else if (props.showModal && prevSelect !== props.carId) {\n    loadDetailInfo(props, setIsPending, setDetailInfo, setIsSuccess);\n  }\n}\n\nconst loadDetailInfo = async (props, setIsPending, setDetailInfo, setIsSuccess) => {\n  try {\n    let res = await axios.get(`${url}/${props.carId}`);\n    setDetailInfo(res.data);\n    setIsPending(true);\n    setIsSuccess(true);\n  } catch (err) {\n    setIsPending(true);\n    setIsSuccess(false);\n  }\n};\n\nexport default handleModalContent;","map":{"version":3,"names":["axios","url","handleModalContent","props","setIsPending","prevSelect","setDetailInfo","setIsSuccess","showModal","carId","loadDetailInfo","res","get","data","err"],"sources":["/Users/donghyun/Desktop/lewns2/src/pages/CarListPage/CarDetail/handleModalContent.js"],"sourcesContent":["import axios from 'axios';\nconst url = `http://localhost:8080/carClasses`;\n\nexport function handleModalContent(props, setIsPending, prevSelect, setDetailInfo, setIsSuccess) {\n  // 모달이 닫힌 경우, 로딩 여부 초기화 (성공 여부를 초기화하게 되면 이전에 성공,실패했는 지를 알 수 없으므로 초기화하지 않는다.)\n  if (!props.showModal) {\n    setIsPending(false);\n  }\n  // 이전에 선택했던 항목과 똑같은 항목을 선택한 경우, 가지고 있던 데이터를 보여준다. -> 로딩의 절차만 없어짐 : 이전 결과 성공인 경우 가진 데이터 렌더링, 실패인 경우(isSucess가 실패로 되어 있음) 에러 출력\n  else if (props.showModal && prevSelect === props.carId) {\n    setIsPending(true);\n  }\n  // 이전 선택과 다른 항목 선택 시, 요청을 통해 데이터를 받아온다.\n  else if (props.showModal && prevSelect !== props.carId) {\n    loadDetailInfo(props, setIsPending, setDetailInfo, setIsSuccess);\n  }\n}\n\nconst loadDetailInfo = async (props, setIsPending, setDetailInfo, setIsSuccess) => {\n  try {\n    let res = await axios.get(`${url}/${props.carId}`);\n    setDetailInfo(res.data);\n    setIsPending(true);\n    setIsSuccess(true);\n  } catch (err) {\n    setIsPending(true);\n    setIsSuccess(false);\n  }\n};\n\nexport default handleModalContent;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,GAAG,GAAI,kCAAb;AAEA,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,YAAnC,EAAiDC,UAAjD,EAA6DC,aAA7D,EAA4EC,YAA5E,EAA0F;EAC/F;EACA,IAAI,CAACJ,KAAK,CAACK,SAAX,EAAsB;IACpBJ,YAAY,CAAC,KAAD,CAAZ;EACD,CAFD,CAGA;EAHA,KAIK,IAAID,KAAK,CAACK,SAAN,IAAmBH,UAAU,KAAKF,KAAK,CAACM,KAA5C,EAAmD;IACtDL,YAAY,CAAC,IAAD,CAAZ;EACD,CAFI,CAGL;EAHK,KAIA,IAAID,KAAK,CAACK,SAAN,IAAmBH,UAAU,KAAKF,KAAK,CAACM,KAA5C,EAAmD;IACtDC,cAAc,CAACP,KAAD,EAAQC,YAAR,EAAsBE,aAAtB,EAAqCC,YAArC,CAAd;EACD;AACF;;AAED,MAAMG,cAAc,GAAG,OAAOP,KAAP,EAAcC,YAAd,EAA4BE,aAA5B,EAA2CC,YAA3C,KAA4D;EACjF,IAAI;IACF,IAAII,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAEX,GAAI,IAAGE,KAAK,CAACM,KAAM,EAAhC,CAAhB;IACAH,aAAa,CAACK,GAAG,CAACE,IAAL,CAAb;IACAT,YAAY,CAAC,IAAD,CAAZ;IACAG,YAAY,CAAC,IAAD,CAAZ;EACD,CALD,CAKE,OAAOO,GAAP,EAAY;IACZV,YAAY,CAAC,IAAD,CAAZ;IACAG,YAAY,CAAC,KAAD,CAAZ;EACD;AACF,CAVD;;AAYA,eAAeL,kBAAf"},"metadata":{},"sourceType":"module"}