{"ast":null,"code":"var _jsxFileName = \"/Users/donghyun/Desktop/lewns2/src/pages/CarListPage/Products.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Card from '../../components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Products = props => {\n  _s();\n\n  const [infos, setInfos] = useState([]);\n  const [type, setType] = useState();\n  useEffect(() => {\n    if (props.type === 'allList') {\n      setType('allList');\n      setInfos(props.items.slice(0, props.offset * 5));\n    } else if (props.type === 'specialPriceList') {\n      setType('specialPriceList');\n      const result = [];\n      props.items.map(item => {\n        var findSpecialPrice = item.carTypeTags.includes('특가');\n\n        if (findSpecialPrice) {\n          result.push(item);\n        }\n\n        setInfos(result);\n      });\n    }\n  }, []);\n  /* 가격 : 10자리에서 반올림 후, 3자리마다 콤마로 구분 */\n\n  const setPrice = olderPrice => {\n    olderPrice = Math.round(olderPrice / 10) * 10;\n    let newPrice = olderPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ',');\n    return String(newPrice);\n  };\n  /* 거리 : 1000 이상은 천, 10000 이상은 만으로 표기 / 테스트를 위해 String으로 형변환 */\n\n\n  const setDistance = olderDistance => {\n    if (olderDistance >= 10000) {\n      olderDistance /= 10000;\n      return String(olderDistance + '만');\n    } else if (olderDistance < 10000 && olderDistance >= 1000) {\n      olderDistance /= 1000;\n      return String(olderDistance + '천');\n    }\n\n    return String(olderDistance);\n  };\n  /* 지역 : '/' -> ', ' 치환 &&  ',' ->  ', '로 치환 */\n\n\n  const setRegionGroups = olderRegion => {\n    let newRegion = olderRegion.toString().replace(/\\/|,/gi, ', ');\n    return newRegion;\n  }; // 빠른 대여, 인기, 특가 등 종류에 따라 다른 디자인을 하기 위해 정규 표현식 대신 for문을 통해 작성\n\n\n  const setTags = olderTags => {\n    const newTags = [];\n\n    for (let i = 0; i < olderTags.length; i++) {\n      newTags.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        id: olderTags[i],\n        children: olderTags[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this));\n    }\n\n    return newTags;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: infos && infos.map(item => /*#__PURE__*/_jsxDEV(Card.Outline, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        src: item.image,\n        alt: `${item.carClassName} 차량`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.carClassName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), setTags(item.carTypeTags)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Price, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"price-text\",\n            children: [setPrice(item.price), \"\\uC6D0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), \"\\xA0\", item.discountPercent === 0 ? '' : /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"discountPercent-text\",\n            children: [\"(-\", item.discountPercent, \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Etc, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.year, \"\\uB144 |\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"drivingDistance-text\",\n            children: [setDistance(item.drivingDistance), \"km |\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), \"\\xA0 \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: setRegionGroups(item.regionGroups)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, item.carClassId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n};\n\n_s(Products, \"ZLKmzLpxuu3n40QTp/QBflgETHY=\");\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["useEffect","useState","Card","Products","props","infos","setInfos","type","setType","items","slice","offset","result","map","item","findSpecialPrice","carTypeTags","includes","push","setPrice","olderPrice","Math","round","newPrice","toString","replace","String","setDistance","olderDistance","setRegionGroups","olderRegion","newRegion","setTags","olderTags","newTags","i","length","image","carClassName","price","discountPercent","year","drivingDistance","regionGroups","carClassId"],"sources":["/Users/donghyun/Desktop/lewns2/src/pages/CarListPage/Products.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Card from '../../components/Card';\n\nexport const Products = (props) => {\n  const [infos, setInfos] = useState([]);\n  const [type, setType] = useState();\n\n  useEffect(() => {\n    if (props.type === 'allList') {\n      setType('allList');\n      setInfos(props.items.slice(0, props.offset * 5));\n    } else if (props.type === 'specialPriceList') {\n      setType('specialPriceList');\n      const result = [];\n      props.items.map((item) => {\n        var findSpecialPrice = item.carTypeTags.includes('특가');\n        if (findSpecialPrice) {\n          result.push(item);\n        }\n        setInfos(result);\n      });\n    }\n  }, []);\n\n  /* 가격 : 10자리에서 반올림 후, 3자리마다 콤마로 구분 */\n  const setPrice = (olderPrice) => {\n    olderPrice = Math.round(olderPrice / 10) * 10;\n    let newPrice = olderPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ',');\n    return String(newPrice);\n  };\n\n  /* 거리 : 1000 이상은 천, 10000 이상은 만으로 표기 / 테스트를 위해 String으로 형변환 */\n  const setDistance = (olderDistance) => {\n    if (olderDistance >= 10000) {\n      olderDistance /= 10000;\n\n      return String(olderDistance + '만');\n    } else if (olderDistance < 10000 && olderDistance >= 1000) {\n      olderDistance /= 1000;\n\n      return String(olderDistance + '천');\n    }\n\n    return String(olderDistance);\n  };\n\n  /* 지역 : '/' -> ', ' 치환 &&  ',' ->  ', '로 치환 */\n  const setRegionGroups = (olderRegion) => {\n    let newRegion = olderRegion.toString().replace(/\\/|,/gi, ', ');\n    return newRegion;\n  };\n\n  // 빠른 대여, 인기, 특가 등 종류에 따라 다른 디자인을 하기 위해 정규 표현식 대신 for문을 통해 작성\n  const setTags = (olderTags) => {\n    const newTags = [];\n    for (let i = 0; i < olderTags.length; i++) {\n      newTags.push(\n        <p id={olderTags[i]} key={i}>\n          {olderTags[i]}\n        </p>,\n      );\n    }\n    return newTags;\n  };\n\n  return (\n    <>\n      {infos &&\n        infos.map((item) => (\n          <Card.Outline key={item.carClassId}>\n            <Card.Img src={item.image} alt={`${item.carClassName} 차량`} />\n\n            <Card.Wrapper>\n              <Card.Title>\n                <p>{item.carClassName}</p>\n                {setTags(item.carTypeTags)}\n              </Card.Title>\n\n              <Card.Price>\n                <p data-testid=\"price-text\">{setPrice(item.price)}원</p>\n                &nbsp;\n                {item.discountPercent === 0 ? (\n                  ''\n                ) : (\n                  <p data-testid=\"discountPercent-text\">(-{item.discountPercent}%)</p>\n                )}\n              </Card.Price>\n\n              <Card.Etc>\n                <p>{item.year}년 |</p>\n                &nbsp;\n                <p data-testid=\"drivingDistance-text\">{setDistance(item.drivingDistance)}km |</p>\n                &nbsp; <p>{setRegionGroups(item.regionGroups)}</p>\n              </Card.Etc>\n            </Card.Wrapper>\n          </Card.Outline>\n        ))}\n    </>\n  );\n};\n\nexport default Products;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}