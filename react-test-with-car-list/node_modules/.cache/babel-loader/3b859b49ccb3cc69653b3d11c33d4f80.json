{"ast":null,"code":"/* \n특가 차량 무한 캐로셀 로직 : ( 절반 - 한개 - 절반 ) \n  - 1개의 길이 : 캐로셀 전체 길이 / 2 (carouselRef.current.clientWidth / 2)\n  - 초기 시작 위치 : (carouselRef.current.clientWidth / 4)\n  - 이동 거리 : 1개의 길이 만큼 이동, translate(-${carouselCurrentPosition}px)\n  - 무한 스크롤을 위해 리스트 추가 한 뒤, 슬라이더 바꿔치기 (마지막 슬라이더 -> 첫번째 슬라이더) : transition-timing-function: step-end 속성을 활용\n*/\nexport function handleCarouselWork(carouselRef, carouselCurrentPosition, setCarouselCurrentPosition, carouselSize, loop, setLoop) {\n  // 캐로셀 전체 길이를 벗어난 경우, 일시적으로 이동 효과를 제거한 뒤, 현재 위치를 시작 위치로 변경.\n  if (typeof carouselCurrentPosition == 'undefined') {\n    carouselRef.current.style = 'transition-timing-function: step-end; transform : translate(-105px)';\n    setCarouselCurrentPosition(carouselRef.current.clientWidth / 4);\n  } // caroulseLoop 함수에 의해, 3초마다 상품 하나의 길이 만큼 -x로 이동한다.\n  else {\n    carouselRef.current.style = `transform : translate(-${carouselCurrentPosition}px)`;\n  } // 이동해야할 위치를 계산한다.\n\n\n  const caroulselLoop = setTimeout(() => {\n    setCarouselCurrentPosition(prev => {\n      if (prev <= carouselRef.current.clientWidth / 2 * carouselSize) {\n        return prev + carouselRef.current.clientWidth / 2;\n      } else return;\n    });\n  }, 3000);\n  setLoop(caroulselLoop);\n  return clearTimeout(loop);\n}\nexport default handleCarouselWork;","map":{"version":3,"names":["handleCarouselWork","carouselRef","carouselCurrentPosition","setCarouselCurrentPosition","carouselSize","loop","setLoop","current","style","clientWidth","caroulselLoop","setTimeout","prev","clearTimeout"],"sources":["/Users/donghyun/Desktop/lewns2/src/pages/CarListPage/CarList/Carousel/handleCarouselWork.js"],"sourcesContent":["/* \n특가 차량 무한 캐로셀 로직 : ( 절반 - 한개 - 절반 ) \n  - 1개의 길이 : 캐로셀 전체 길이 / 2 (carouselRef.current.clientWidth / 2)\n  - 초기 시작 위치 : (carouselRef.current.clientWidth / 4)\n  - 이동 거리 : 1개의 길이 만큼 이동, translate(-${carouselCurrentPosition}px)\n  - 무한 스크롤을 위해 리스트 추가 한 뒤, 슬라이더 바꿔치기 (마지막 슬라이더 -> 첫번째 슬라이더) : transition-timing-function: step-end 속성을 활용\n*/\n\nexport function handleCarouselWork(\n  carouselRef,\n  carouselCurrentPosition,\n  setCarouselCurrentPosition,\n  carouselSize,\n  loop,\n  setLoop,\n) {\n  // 캐로셀 전체 길이를 벗어난 경우, 일시적으로 이동 효과를 제거한 뒤, 현재 위치를 시작 위치로 변경.\n  if (typeof carouselCurrentPosition == 'undefined') {\n    carouselRef.current.style =\n      'transition-timing-function: step-end; transform : translate(-105px)';\n    setCarouselCurrentPosition(carouselRef.current.clientWidth / 4);\n  }\n  // caroulseLoop 함수에 의해, 3초마다 상품 하나의 길이 만큼 -x로 이동한다.\n  else {\n    carouselRef.current.style = `transform : translate(-${carouselCurrentPosition}px)`;\n  }\n\n  // 이동해야할 위치를 계산한다.\n  const caroulselLoop = setTimeout(() => {\n    setCarouselCurrentPosition((prev) => {\n      if (prev <= (carouselRef.current.clientWidth / 2) * carouselSize) {\n        return prev + carouselRef.current.clientWidth / 2;\n      } else return;\n    });\n  }, 3000);\n\n  setLoop(caroulselLoop);\n  return clearTimeout(loop);\n}\n\nexport default handleCarouselWork;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,SAASA,kBAAT,CACLC,WADK,EAELC,uBAFK,EAGLC,0BAHK,EAILC,YAJK,EAKLC,IALK,EAMLC,OANK,EAOL;EACA;EACA,IAAI,OAAOJ,uBAAP,IAAkC,WAAtC,EAAmD;IACjDD,WAAW,CAACM,OAAZ,CAAoBC,KAApB,GACE,qEADF;IAEAL,0BAA0B,CAACF,WAAW,CAACM,OAAZ,CAAoBE,WAApB,GAAkC,CAAnC,CAA1B;EACD,CAJD,CAKA;EALA,KAMK;IACHR,WAAW,CAACM,OAAZ,CAAoBC,KAApB,GAA6B,0BAAyBN,uBAAwB,KAA9E;EACD,CAVD,CAYA;;;EACA,MAAMQ,aAAa,GAAGC,UAAU,CAAC,MAAM;IACrCR,0BAA0B,CAAES,IAAD,IAAU;MACnC,IAAIA,IAAI,IAAKX,WAAW,CAACM,OAAZ,CAAoBE,WAApB,GAAkC,CAAnC,GAAwCL,YAApD,EAAkE;QAChE,OAAOQ,IAAI,GAAGX,WAAW,CAACM,OAAZ,CAAoBE,WAApB,GAAkC,CAAhD;MACD,CAFD,MAEO;IACR,CAJyB,CAA1B;EAKD,CAN+B,EAM7B,IAN6B,CAAhC;EAQAH,OAAO,CAACI,aAAD,CAAP;EACA,OAAOG,YAAY,CAACR,IAAD,CAAnB;AACD;AAED,eAAeL,kBAAf"},"metadata":{},"sourceType":"module"}