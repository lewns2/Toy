{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.XMLHttpRequestInterceptor = void 0;\n\nvar outvariant_1 = require(\"outvariant\");\n\nvar glossary_1 = require(\"../../glossary\");\n\nvar Interceptor_1 = require(\"../../Interceptor\");\n\nvar XMLHttpRequestOverride_1 = require(\"./XMLHttpRequestOverride\");\n\nvar XMLHttpRequestInterceptor =\n/** @class */\nfunction (_super) {\n  __extends(XMLHttpRequestInterceptor, _super);\n\n  function XMLHttpRequestInterceptor() {\n    return _super.call(this, XMLHttpRequestInterceptor.symbol) || this;\n  }\n\n  XMLHttpRequestInterceptor.prototype.checkEnvironment = function () {\n    return typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined';\n  };\n\n  XMLHttpRequestInterceptor.prototype.setup = function () {\n    var log = this.log.extend('setup');\n    log('patching \"XMLHttpRequest\" module...');\n    var PureXMLHttpRequest = window.XMLHttpRequest;\n    outvariant_1.invariant(!PureXMLHttpRequest[glossary_1.IS_PATCHED_MODULE], 'Failed to patch the \"XMLHttpRequest\" module: already patched.');\n    window.XMLHttpRequest = XMLHttpRequestOverride_1.createXMLHttpRequestOverride({\n      XMLHttpRequest: PureXMLHttpRequest,\n      emitter: this.emitter,\n      log: this.log\n    });\n    log('native \"XMLHttpRequest\" module patched!', window.XMLHttpRequest.name);\n    Object.defineProperty(window.XMLHttpRequest, glossary_1.IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(function () {\n      Object.defineProperty(window.XMLHttpRequest, glossary_1.IS_PATCHED_MODULE, {\n        value: undefined\n      });\n      window.XMLHttpRequest = PureXMLHttpRequest;\n      log('native \"XMLHttpRequest\" module restored!', window.XMLHttpRequest.name);\n    });\n  };\n\n  XMLHttpRequestInterceptor.symbol = Symbol('xhr');\n  return XMLHttpRequestInterceptor;\n}(Interceptor_1.Interceptor);\n\nexports.XMLHttpRequestInterceptor = XMLHttpRequestInterceptor;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAKA;;AAEA;;AAQA;AAAA;AAAA;EAA+CA;;EAG7C;WACEC,kBAAMC,yBAAyB,CAACC,MAAhC,KAAuC;EACxC;;EAESD,uDAAV;IACE,OACE,OAAOE,MAAP,KAAkB,WAAlB,IACA,OAAOA,MAAM,CAACC,cAAd,KAAiC,WAFnC;EAID,CALS;;EAOAH,4CAAV;IACE,IAAMI,GAAG,GAAG,KAAKA,GAAL,CAASC,MAAT,CAAgB,OAAhB,CAAZ;IAEAD,GAAG,CAAC,qCAAD,CAAH;IAEA,IAAME,kBAAkB,GAAGJ,MAAM,CAACC,cAAlC;IAEAI,uBACE,CAAED,kBAA0B,CAACE,4BAAD,CAD9B,EAEE,+DAFF;IAKAN,MAAM,CAACC,cAAP,GAAwBM,sDAA6B;MACnDN,cAAc,EAAEG,kBADmC;MAEnDI,OAAO,EAAE,KAAKA,OAFqC;MAGnDN,GAAG,EAAE,KAAKA;IAHyC,CAA7B,CAAxB;IAMAA,GAAG,CAAC,yCAAD,EAA4CF,MAAM,CAACC,cAAP,CAAsBQ,IAAlE,CAAH;IAEAC,MAAM,CAACC,cAAP,CAAsBX,MAAM,CAACC,cAA7B,EAA6CK,4BAA7C,EAAgE;MAC9DM,UAAU,EAAE,IADkD;MAE9DC,YAAY,EAAE,IAFgD;MAG9DC,KAAK,EAAE;IAHuD,CAAhE;IAMA,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB;MACtBN,MAAM,CAACC,cAAP,CAAsBX,MAAM,CAACC,cAA7B,EAA6CK,4BAA7C,EAAgE;QAC9DQ,KAAK,EAAEG;MADuD,CAAhE;MAIAjB,MAAM,CAACC,cAAP,GAAwBG,kBAAxB;MACAF,GAAG,CACD,0CADC,EAEDF,MAAM,CAACC,cAAP,CAAsBQ,IAFrB,CAAH;IAID,CAVD;EAWD,CArCS;;EAbHX,mCAASoB,MAAM,CAAC,KAAD,CAAf;EAmDT;AAAC,CApDD,CAA+CC,yBAA/C;;AAAaC","names":["__extends","_super","XMLHttpRequestInterceptor","symbol","window","XMLHttpRequest","log","extend","PureXMLHttpRequest","outvariant_1","glossary_1","XMLHttpRequestOverride_1","emitter","name","Object","defineProperty","enumerable","configurable","value","subscriptions","push","undefined","Symbol","Interceptor_1","exports"],"sources":["/Users/donghyun/Desktop/lewns2/node_modules/@mswjs/interceptors/src/interceptors/XMLHttpRequest/index.ts"],"sourcesContent":["import { invariant } from 'outvariant'\nimport {\n  HttpRequestEventMap,\n  InteractiveIsomorphicRequest,\n  IS_PATCHED_MODULE,\n} from '../../glossary'\nimport { Interceptor } from '../../Interceptor'\nimport { AsyncEventEmitter } from '../../utils/AsyncEventEmitter'\nimport { createXMLHttpRequestOverride } from './XMLHttpRequestOverride'\n\nexport type XMLHttpRequestEventListener = (\n  request: InteractiveIsomorphicRequest\n) => Promise<void> | void\n\nexport type XMLHttpRequestEmitter = AsyncEventEmitter<HttpRequestEventMap>\n\nexport class XMLHttpRequestInterceptor extends Interceptor<HttpRequestEventMap> {\n  static symbol = Symbol('xhr')\n\n  constructor() {\n    super(XMLHttpRequestInterceptor.symbol)\n  }\n\n  protected checkEnvironment() {\n    return (\n      typeof window !== 'undefined' &&\n      typeof window.XMLHttpRequest !== 'undefined'\n    )\n  }\n\n  protected setup() {\n    const log = this.log.extend('setup')\n\n    log('patching \"XMLHttpRequest\" module...')\n\n    const PureXMLHttpRequest = window.XMLHttpRequest\n\n    invariant(\n      !(PureXMLHttpRequest as any)[IS_PATCHED_MODULE],\n      'Failed to patch the \"XMLHttpRequest\" module: already patched.'\n    )\n\n    window.XMLHttpRequest = createXMLHttpRequestOverride({\n      XMLHttpRequest: PureXMLHttpRequest,\n      emitter: this.emitter,\n      log: this.log,\n    })\n\n    log('native \"XMLHttpRequest\" module patched!', window.XMLHttpRequest.name)\n\n    Object.defineProperty(window.XMLHttpRequest, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true,\n    })\n\n    this.subscriptions.push(() => {\n      Object.defineProperty(window.XMLHttpRequest, IS_PATCHED_MODULE, {\n        value: undefined,\n      })\n\n      window.XMLHttpRequest = PureXMLHttpRequest\n      log(\n        'native \"XMLHttpRequest\" module restored!',\n        window.XMLHttpRequest.name\n      )\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"script"}