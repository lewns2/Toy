{"ast":null,"code":"var _jsxFileName = \"/Users/donghyun/Desktop/lewns2/src/pages/CarListPage/Products.jsx\";\nimport Card from '../../components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Products = props => {\n  const infos = props.items.slice(0, props.offset * 5);\n  /* 가격 : 10자리에서 반올림 후, 3자리마다 콤마로 구분 */\n\n  const setPrice = olderPrice => {\n    olderPrice = Math.round(olderPrice / 10) * 10;\n    let newPrice = olderPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ',');\n    return newPrice;\n  };\n  /* 거리 : 1000 이상은 천, 10000 이상은 만으로 표기 */\n\n\n  const setDistance = olderDistance => {\n    if (olderDistance >= 10000) {\n      olderDistance /= 10000;\n      return String(olderDistance + '만');\n    } else if (olderDistance < 10000 && olderDistance >= 1000) {\n      olderDistance /= 1000;\n      return String(olderDistance + '천');\n    }\n\n    return olderDistance;\n  };\n  /* 지역 : '/' -> ', ' 치환 &&  ',' ->  ', '로 치환 */\n\n\n  const setRegionGroups = olderRegion => {\n    let newRegion = olderRegion.toString().replace(/\\/|,/gi, ', ');\n    return newRegion;\n  }; // 빠른 대여, 인기, 특가 등 종류에 따라 다른 디자인을 하기 위해 정규 표현식 대신 for문을 통해 작성\n\n\n  const setTags = olderTags => {\n    const newTags = [];\n\n    for (let i = 0; i < olderTags.length; i++) {\n      newTags.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        id: olderTags[i],\n        children: olderTags[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this));\n    }\n\n    return newTags;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: infos && infos.map(item => /*#__PURE__*/_jsxDEV(Card.Outline, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        src: item.image,\n        alt: `${item.carClassNfame} 차량`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.carClassName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), setTags(item.carTypeTags)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Price, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [setPrice(item.price), \"\\uC6D0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), \"\\xA0\", item.discountPercent === 0 ? '' : /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"discountPercent-text\",\n            children: [\"(-\", item.discountPercent, \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Etc, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.year, \"\\uB144 |\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), \"\\xA0 \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [setDistance(item.drivingDistance), \"km |\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 24\n          }, this), \"\\xA0 \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: setRegionGroups(item.regionGroups)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, item.carClassId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n};\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["Card","Products","props","infos","items","slice","offset","setPrice","olderPrice","Math","round","newPrice","toString","replace","setDistance","olderDistance","String","setRegionGroups","olderRegion","newRegion","setTags","olderTags","newTags","i","length","push","map","item","image","carClassNfame","carClassName","carTypeTags","price","discountPercent","year","drivingDistance","regionGroups","carClassId"],"sources":["/Users/donghyun/Desktop/lewns2/src/pages/CarListPage/Products.jsx"],"sourcesContent":["import Card from '../../components/Card';\n\nexport const Products = (props) => {\n  const infos = props.items.slice(0, props.offset * 5);\n\n  /* 가격 : 10자리에서 반올림 후, 3자리마다 콤마로 구분 */\n  const setPrice = (olderPrice) => {\n    olderPrice = Math.round(olderPrice / 10) * 10;\n    let newPrice = olderPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ',');\n    return newPrice;\n  };\n\n  /* 거리 : 1000 이상은 천, 10000 이상은 만으로 표기 */\n  const setDistance = (olderDistance) => {\n    if (olderDistance >= 10000) {\n      olderDistance /= 10000;\n\n      return String(olderDistance + '만');\n    } else if (olderDistance < 10000 && olderDistance >= 1000) {\n      olderDistance /= 1000;\n\n      return String(olderDistance + '천');\n    }\n\n    return olderDistance;\n  };\n\n  /* 지역 : '/' -> ', ' 치환 &&  ',' ->  ', '로 치환 */\n  const setRegionGroups = (olderRegion) => {\n    let newRegion = olderRegion.toString().replace(/\\/|,/gi, ', ');\n    return newRegion;\n  };\n\n  // 빠른 대여, 인기, 특가 등 종류에 따라 다른 디자인을 하기 위해 정규 표현식 대신 for문을 통해 작성\n  const setTags = (olderTags) => {\n    const newTags = [];\n    for (let i = 0; i < olderTags.length; i++) {\n      newTags.push(\n        <p id={olderTags[i]} key={i}>\n          {olderTags[i]}\n        </p>,\n      );\n    }\n    return newTags;\n  };\n\n  return (\n    <>\n      {infos &&\n        infos.map((item) => (\n          <Card.Outline key={item.carClassId}>\n            <Card.Img src={item.image} alt={`${item.carClassNfame} 차량`} />\n\n            <Card.Wrapper>\n              <Card.Title>\n                <p>{item.carClassName}</p>\n                {setTags(item.carTypeTags)}\n              </Card.Title>\n\n              <Card.Price>\n                <p>{setPrice(item.price)}원</p>\n                &nbsp;\n                {item.discountPercent === 0 ? (\n                  ''\n                ) : (\n                  <p data-testid=\"discountPercent-text\">(-{item.discountPercent}%)</p>\n                )}\n              </Card.Price>\n\n              <Card.Etc>\n                <p>{item.year}년 |</p>\n                &nbsp; <p>{setDistance(item.drivingDistance)}km |</p>\n                &nbsp; <p>{setRegionGroups(item.regionGroups)}</p>\n              </Card.Etc>\n            </Card.Wrapper>\n          </Card.Outline>\n        ))}\n    </>\n  );\n};\n\nexport default Products;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}