{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.format = void 0;\nvar POSITIONALS_EXP = /(%?)(%([sdjo]))/g;\n\nfunction serializePositional(positional, flag) {\n  switch (flag) {\n    // Strings.\n    case 's':\n      return positional;\n    // Digits.\n\n    case 'd':\n    case 'i':\n      return Number(positional);\n    // JSON.\n\n    case 'j':\n      return JSON.stringify(positional);\n    // Objects.\n\n    case 'o':\n      {\n        // Preserve stings to prevent extra quotes around them.\n        if (typeof positional === 'string') {\n          return positional;\n        }\n\n        var json = JSON.stringify(positional); // If the positional isn't serializable, return it as-is.\n\n        if (json === '{}' || json === '[]' || /^\\[object .+?\\]$/.test(json)) {\n          return positional;\n        }\n\n        return json;\n      }\n  }\n}\n\nfunction format(message) {\n  var positionals = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positionals[_i - 1] = arguments[_i];\n  }\n\n  if (positionals.length === 0) {\n    return message;\n  }\n\n  var positionalIndex = 0;\n  var formattedMessage = message.replace(POSITIONALS_EXP, function (match, isEscaped, _, flag) {\n    var positional = positionals[positionalIndex];\n    var value = serializePositional(positional, flag);\n\n    if (!isEscaped) {\n      positionalIndex++;\n      return value;\n    }\n\n    return match;\n  }); // Append unresolved positionals to string as-is.\n\n  if (positionalIndex < positionals.length) {\n    formattedMessage += \" \" + positionals.slice(positionalIndex).join(' ');\n  }\n\n  formattedMessage = formattedMessage.replace(/%{2,2}/g, '%');\n  return formattedMessage;\n}\n\nexports.format = format;","map":{"version":3,"names":["Object","defineProperty","exports","value","format","POSITIONALS_EXP","serializePositional","positional","flag","Number","JSON","stringify","json","test","message","positionals","_i","arguments","length","positionalIndex","formattedMessage","replace","match","isEscaped","_","slice","join"],"sources":["/Users/donghyun/Desktop/lewns2/node_modules/outvariant/lib/format.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.format = void 0;\nvar POSITIONALS_EXP = /(%?)(%([sdjo]))/g;\nfunction serializePositional(positional, flag) {\n    switch (flag) {\n        // Strings.\n        case 's':\n            return positional;\n        // Digits.\n        case 'd':\n        case 'i':\n            return Number(positional);\n        // JSON.\n        case 'j':\n            return JSON.stringify(positional);\n        // Objects.\n        case 'o': {\n            // Preserve stings to prevent extra quotes around them.\n            if (typeof positional === 'string') {\n                return positional;\n            }\n            var json = JSON.stringify(positional);\n            // If the positional isn't serializable, return it as-is.\n            if (json === '{}' || json === '[]' || /^\\[object .+?\\]$/.test(json)) {\n                return positional;\n            }\n            return json;\n        }\n    }\n}\nfunction format(message) {\n    var positionals = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        positionals[_i - 1] = arguments[_i];\n    }\n    if (positionals.length === 0) {\n        return message;\n    }\n    var positionalIndex = 0;\n    var formattedMessage = message.replace(POSITIONALS_EXP, function (match, isEscaped, _, flag) {\n        var positional = positionals[positionalIndex];\n        var value = serializePositional(positional, flag);\n        if (!isEscaped) {\n            positionalIndex++;\n            return value;\n        }\n        return match;\n    });\n    // Append unresolved positionals to string as-is.\n    if (positionalIndex < positionals.length) {\n        formattedMessage += \" \" + positionals.slice(positionalIndex).join(' ');\n    }\n    formattedMessage = formattedMessage.replace(/%{2,2}/g, '%');\n    return formattedMessage;\n}\nexports.format = format;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiB,KAAK,CAAtB;AACA,IAAIC,eAAe,GAAG,kBAAtB;;AACA,SAASC,mBAAT,CAA6BC,UAA7B,EAAyCC,IAAzC,EAA+C;EAC3C,QAAQA,IAAR;IACI;IACA,KAAK,GAAL;MACI,OAAOD,UAAP;IACJ;;IACA,KAAK,GAAL;IACA,KAAK,GAAL;MACI,OAAOE,MAAM,CAACF,UAAD,CAAb;IACJ;;IACA,KAAK,GAAL;MACI,OAAOG,IAAI,CAACC,SAAL,CAAeJ,UAAf,CAAP;IACJ;;IACA,KAAK,GAAL;MAAU;QACN;QACA,IAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;UAChC,OAAOA,UAAP;QACH;;QACD,IAAIK,IAAI,GAAGF,IAAI,CAACC,SAAL,CAAeJ,UAAf,CAAX,CALM,CAMN;;QACA,IAAIK,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,IAA1B,IAAkC,mBAAmBC,IAAnB,CAAwBD,IAAxB,CAAtC,EAAqE;UACjE,OAAOL,UAAP;QACH;;QACD,OAAOK,IAAP;MACH;EAvBL;AAyBH;;AACD,SAASR,MAAT,CAAgBU,OAAhB,EAAyB;EACrB,IAAIC,WAAW,GAAG,EAAlB;;EACA,KAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;IAC1CD,WAAW,CAACC,EAAE,GAAG,CAAN,CAAX,GAAsBC,SAAS,CAACD,EAAD,CAA/B;EACH;;EACD,IAAID,WAAW,CAACG,MAAZ,KAAuB,CAA3B,EAA8B;IAC1B,OAAOJ,OAAP;EACH;;EACD,IAAIK,eAAe,GAAG,CAAtB;EACA,IAAIC,gBAAgB,GAAGN,OAAO,CAACO,OAAR,CAAgBhB,eAAhB,EAAiC,UAAUiB,KAAV,EAAiBC,SAAjB,EAA4BC,CAA5B,EAA+BhB,IAA/B,EAAqC;IACzF,IAAID,UAAU,GAAGQ,WAAW,CAACI,eAAD,CAA5B;IACA,IAAIhB,KAAK,GAAGG,mBAAmB,CAACC,UAAD,EAAaC,IAAb,CAA/B;;IACA,IAAI,CAACe,SAAL,EAAgB;MACZJ,eAAe;MACf,OAAOhB,KAAP;IACH;;IACD,OAAOmB,KAAP;EACH,CARsB,CAAvB,CATqB,CAkBrB;;EACA,IAAIH,eAAe,GAAGJ,WAAW,CAACG,MAAlC,EAA0C;IACtCE,gBAAgB,IAAI,MAAML,WAAW,CAACU,KAAZ,CAAkBN,eAAlB,EAAmCO,IAAnC,CAAwC,GAAxC,CAA1B;EACH;;EACDN,gBAAgB,GAAGA,gBAAgB,CAACC,OAAjB,CAAyB,SAAzB,EAAoC,GAApC,CAAnB;EACA,OAAOD,gBAAP;AACH;;AACDlB,OAAO,CAACE,MAAR,GAAiBA,MAAjB"},"metadata":{},"sourceType":"script"}