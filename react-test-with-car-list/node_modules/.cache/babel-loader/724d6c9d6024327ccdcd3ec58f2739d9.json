{"ast":null,"code":"var _jsxFileName = \"/Users/donghyun/Desktop/lewns2/src/pages/CarListPage/Products.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Card from '../../components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Products = props => {\n  _s();\n\n  const [infos, setInfos] = useState([]);\n  const [type, setType] = useState();\n  /* 공통 컴포넌트로 사용하면서 특가 차량과 모든 차량을 보여주는 것에 대한 분기 */\n\n  useEffect(() => {\n    if (props.type === 'allList') {\n      setType('allList');\n      setInfos(props.items.slice(0, props.offset * 5));\n    } else if (props.type === 'specialPriceList') {\n      setType('specialPriceList');\n      const result = [];\n      props.items.map(item => {\n        var findSpecialPrice = item.carTypeTags.includes('특가');\n\n        if (findSpecialPrice) {\n          result.push(item);\n        }\n\n        setInfos(result);\n        props.setCarouselSize(result.length);\n      });\n      const a = result[0];\n      const b = result[1];\n      const c = result[2];\n      result.push(a);\n      result.push(b);\n      result.push(c);\n      return result;\n    }\n  }, [props]);\n  /* 가격 : 10자리에서 반올림 후, 3자리마다 콤마로 구분 */\n\n  const setPrice = olderPrice => {\n    olderPrice = Math.round(olderPrice / 10) * 10;\n    let newPrice = olderPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ',');\n    return String(newPrice);\n  };\n  /* 거리 : 1000 이상은 천, 10000 이상은 만으로 표기 / 테스트를 위해 String으로 형변환 */\n\n\n  const setDistance = olderDistance => {\n    if (olderDistance >= 10000) {\n      olderDistance /= 10000;\n      return String(olderDistance + '만');\n    } else if (olderDistance < 10000 && olderDistance >= 1000) {\n      olderDistance /= 1000;\n      return String(olderDistance + '천');\n    }\n\n    return String(olderDistance);\n  };\n  /* 지역 : '/' -> ', ' 치환 &&  ',' ->  ', '로 치환 */\n\n\n  const setRegionGroups = olderRegion => {\n    let newRegion = olderRegion.toString().replace(/\\/|,/gi, ', ');\n    return newRegion;\n  }; // 빠른 대여, 인기, 특가 등 종류에 따라 다른 디자인을 하기 위해 정규 표현식 대신 for문을 통해 작성\n\n\n  const setTags = olderTags => {\n    const newTags = [];\n\n    for (let i = 0; i < olderTags.length; i++) {\n      newTags.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        id: olderTags[i],\n        children: olderTags[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this));\n    }\n\n    return newTags;\n  }; // 하단 표기 정보 길이를 찾기 위해 String 형 변환 => 차량 캐러셀이면서 길이가 20이 넘는다면 '...' 스타일 적용\n\n\n  const setBottomInfomations = (year, dist, region) => {\n    const newBottomInfomations = year + '년 | ' + dist + 'km | ' + region;\n\n    if (type === 'specialPriceList' && newBottomInfomations.length > 20) {\n      return /*#__PURE__*/_jsxDEV(Card.OverBottomInfo, {\n        children: newBottomInfomations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 14\n      }, this);\n    } else {\n      return newBottomInfomations;\n    }\n  };\n  /* 모든 차량 리스트에 대해서만, 모달에 대한 권한을 가진다. */\n\n\n  const handleOpenModal = id => {\n    if (type === 'allList') {\n      props.setShowModal(1);\n      props.setCarId(id);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: infos && infos.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": type === 'allList' ? 'car-list-area' : '',\n      style: {\n        width: type === 'specialPriceList' ? `${props.oneWidth}px` : ''\n      },\n      onClick: () => {\n        handleOpenModal(item.carClassId);\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        type: props.type,\n        image: item.image,\n        className: item.carClassName,\n        carTypeTags: item.carTypeTags,\n        price: item.price,\n        year: item.year,\n        drivingDistance: item.drivingDistance,\n        regionGroups: item.regionGroups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n};\n\n_s(Products, \"ZLKmzLpxuu3n40QTp/QBflgETHY=\");\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["useEffect","useState","Card","Products","props","infos","setInfos","type","setType","items","slice","offset","result","map","item","findSpecialPrice","carTypeTags","includes","push","setCarouselSize","length","a","b","c","setPrice","olderPrice","Math","round","newPrice","toString","replace","String","setDistance","olderDistance","setRegionGroups","olderRegion","newRegion","setTags","olderTags","newTags","i","setBottomInfomations","year","dist","region","newBottomInfomations","handleOpenModal","id","setShowModal","setCarId","idx","width","oneWidth","carClassId","image","carClassName","price","drivingDistance","regionGroups"],"sources":["/Users/donghyun/Desktop/lewns2/src/pages/CarListPage/Products.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Card from '../../components/Card';\n\nexport const Products = (props) => {\n  const [infos, setInfos] = useState([]);\n  const [type, setType] = useState();\n\n  /* 공통 컴포넌트로 사용하면서 특가 차량과 모든 차량을 보여주는 것에 대한 분기 */\n  useEffect(() => {\n    if (props.type === 'allList') {\n      setType('allList');\n      setInfos(props.items.slice(0, props.offset * 5));\n    } else if (props.type === 'specialPriceList') {\n      setType('specialPriceList');\n\n      const result = [];\n\n      props.items.map((item) => {\n        var findSpecialPrice = item.carTypeTags.includes('특가');\n        if (findSpecialPrice) {\n          result.push(item);\n        }\n        setInfos(result);\n\n        props.setCarouselSize(result.length);\n      });\n      const a = result[0];\n      const b = result[1];\n      const c = result[2];\n      result.push(a);\n      result.push(b);\n      result.push(c);\n\n      return result;\n    }\n  }, [props]);\n\n  /* 가격 : 10자리에서 반올림 후, 3자리마다 콤마로 구분 */\n  const setPrice = (olderPrice) => {\n    olderPrice = Math.round(olderPrice / 10) * 10;\n    let newPrice = olderPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ',');\n    return String(newPrice);\n  };\n\n  /* 거리 : 1000 이상은 천, 10000 이상은 만으로 표기 / 테스트를 위해 String으로 형변환 */\n  const setDistance = (olderDistance) => {\n    if (olderDistance >= 10000) {\n      olderDistance /= 10000;\n\n      return String(olderDistance + '만');\n    } else if (olderDistance < 10000 && olderDistance >= 1000) {\n      olderDistance /= 1000;\n\n      return String(olderDistance + '천');\n    }\n\n    return String(olderDistance);\n  };\n\n  /* 지역 : '/' -> ', ' 치환 &&  ',' ->  ', '로 치환 */\n  const setRegionGroups = (olderRegion) => {\n    let newRegion = olderRegion.toString().replace(/\\/|,/gi, ', ');\n    return newRegion;\n  };\n\n  // 빠른 대여, 인기, 특가 등 종류에 따라 다른 디자인을 하기 위해 정규 표현식 대신 for문을 통해 작성\n  const setTags = (olderTags) => {\n    const newTags = [];\n    for (let i = 0; i < olderTags.length; i++) {\n      newTags.push(\n        <p id={olderTags[i]} key={i}>\n          {olderTags[i]}\n        </p>,\n      );\n    }\n    return newTags;\n  };\n\n  // 하단 표기 정보 길이를 찾기 위해 String 형 변환 => 차량 캐러셀이면서 길이가 20이 넘는다면 '...' 스타일 적용\n  const setBottomInfomations = (year, dist, region) => {\n    const newBottomInfomations = year + '년 | ' + dist + 'km | ' + region;\n\n    if (type === 'specialPriceList' && newBottomInfomations.length > 20) {\n      return <Card.OverBottomInfo>{newBottomInfomations}</Card.OverBottomInfo>;\n    } else {\n      return newBottomInfomations;\n    }\n  };\n\n  /* 모든 차량 리스트에 대해서만, 모달에 대한 권한을 가진다. */\n  const handleOpenModal = (id) => {\n    if (type === 'allList') {\n      props.setShowModal(1);\n      props.setCarId(id);\n    }\n  };\n\n  return (\n    <>\n      {infos &&\n        infos.map((item, idx) => (\n          <div\n            key={idx}\n            data-testid={type === 'allList' ? 'car-list-area' : ''}\n            style={{ width: type === 'specialPriceList' ? `${props.oneWidth}px` : '' }}\n            onClick={() => {\n              handleOpenModal(item.carClassId);\n            }}>\n            <Card\n              type={props.type}\n              image={item.image}\n              className={item.carClassName}\n              carTypeTags={item.carTypeTags}\n              price={item.price}\n              year={item.year}\n              drivingDistance={item.drivingDistance}\n              regionGroups={item.regionGroups}></Card>\n          </div>\n        ))}\n    </>\n  );\n};\n\nexport default Products;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}