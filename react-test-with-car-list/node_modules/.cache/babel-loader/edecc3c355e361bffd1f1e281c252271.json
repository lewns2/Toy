{"ast":null,"code":"var _jsxFileName = \"/Users/donghyun/Desktop/lewns2/src/pages/CarListPage/Products.jsx\";\nimport Card from '../../components/Card';\nimport Top2 from '../../components/Top2';\nimport { CarListBox } from '../../components/CarListBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Products = props => {\n  const infos = props.items.slice(0, props.offset * 5);\n  /* 가격 : 10자리에서 반올림 후, 3자리마다 콤마로 구분 */\n\n  const setPrice = olderPrice => {\n    olderPrice = Math.round(olderPrice / 10) * 10;\n    let newPrice = olderPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ',');\n    return String(newPrice);\n  };\n  /* 거리 : 1000 이상은 천, 10000 이상은 만으로 표기 / 테스트를 위해 String으로 형변환 */\n\n\n  const setDistance = olderDistance => {\n    if (olderDistance >= 10000) {\n      olderDistance /= 10000;\n      return String(olderDistance + '만');\n    } else if (olderDistance < 10000 && olderDistance >= 1000) {\n      olderDistance /= 1000;\n      return String(olderDistance + '천');\n    }\n\n    return String(olderDistance);\n  };\n  /* 지역 : '/' -> ', ' 치환 &&  ',' ->  ', '로 치환 */\n\n\n  const setRegionGroups = olderRegion => {\n    let newRegion = olderRegion.toString().replace(/\\/|,/gi, ', ');\n    return newRegion;\n  }; // 빠른 대여, 인기, 특가 등 종류에 따라 다른 디자인을 하기 위해 정규 표현식 대신 for문을 통해 작성\n\n\n  const setTags = olderTags => {\n    const newTags = [];\n\n    for (let i = 0; i < olderTags.length; i++) {\n      newTags.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        id: olderTags[i],\n        children: olderTags[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this));\n    }\n\n    return newTags;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Top2, {\n      children: \"\\uBAA8\\uB4E0 \\uCC28\\uB7C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CarListBox, {\n      carList: infos,\n      type: \"allList\",\n      offset: props.offset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["Card","Top2","CarListBox","Products","props","infos","items","slice","offset","setPrice","olderPrice","Math","round","newPrice","toString","replace","String","setDistance","olderDistance","setRegionGroups","olderRegion","newRegion","setTags","olderTags","newTags","i","length","push"],"sources":["/Users/donghyun/Desktop/lewns2/src/pages/CarListPage/Products.jsx"],"sourcesContent":["import Card from '../../components/Card';\nimport Top2 from '../../components/Top2';\nimport { CarListBox } from '../../components/CarListBox';\n\nexport const Products = (props) => {\n  const infos = props.items.slice(0, props.offset * 5);\n\n  /* 가격 : 10자리에서 반올림 후, 3자리마다 콤마로 구분 */\n  const setPrice = (olderPrice) => {\n    olderPrice = Math.round(olderPrice / 10) * 10;\n    let newPrice = olderPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ',');\n    return String(newPrice);\n  };\n\n  /* 거리 : 1000 이상은 천, 10000 이상은 만으로 표기 / 테스트를 위해 String으로 형변환 */\n  const setDistance = (olderDistance) => {\n    if (olderDistance >= 10000) {\n      olderDistance /= 10000;\n\n      return String(olderDistance + '만');\n    } else if (olderDistance < 10000 && olderDistance >= 1000) {\n      olderDistance /= 1000;\n\n      return String(olderDistance + '천');\n    }\n\n    return String(olderDistance);\n  };\n\n  /* 지역 : '/' -> ', ' 치환 &&  ',' ->  ', '로 치환 */\n  const setRegionGroups = (olderRegion) => {\n    let newRegion = olderRegion.toString().replace(/\\/|,/gi, ', ');\n    return newRegion;\n  };\n\n  // 빠른 대여, 인기, 특가 등 종류에 따라 다른 디자인을 하기 위해 정규 표현식 대신 for문을 통해 작성\n  const setTags = (olderTags) => {\n    const newTags = [];\n    for (let i = 0; i < olderTags.length; i++) {\n      newTags.push(\n        <p id={olderTags[i]} key={i}>\n          {olderTags[i]}\n        </p>,\n      );\n    }\n    return newTags;\n  };\n\n  return (\n    <>\n      <Top2>모든 차량</Top2>\n      <CarListBox carList={infos} type=\"allList\" offset={props.offset} />\n    </>\n  );\n};\n\nexport default Products;\n"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,uBAAjB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,UAAT,QAA2B,6BAA3B;;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EACjC,MAAMC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBH,KAAK,CAACI,MAAN,GAAe,CAApC,CAAd;EAEA;;EACA,MAAMC,QAAQ,GAAIC,UAAD,IAAgB;IAC/BA,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWF,UAAU,GAAG,EAAxB,IAA8B,EAA3C;IACA,IAAIG,QAAQ,GAAGH,UAAU,CAACI,QAAX,GAAsBC,OAAtB,CAA8B,iCAA9B,EAAiE,GAAjE,CAAf;IACA,OAAOC,MAAM,CAACH,QAAD,CAAb;EACD,CAJD;EAMA;;;EACA,MAAMI,WAAW,GAAIC,aAAD,IAAmB;IACrC,IAAIA,aAAa,IAAI,KAArB,EAA4B;MAC1BA,aAAa,IAAI,KAAjB;MAEA,OAAOF,MAAM,CAACE,aAAa,GAAG,GAAjB,CAAb;IACD,CAJD,MAIO,IAAIA,aAAa,GAAG,KAAhB,IAAyBA,aAAa,IAAI,IAA9C,EAAoD;MACzDA,aAAa,IAAI,IAAjB;MAEA,OAAOF,MAAM,CAACE,aAAa,GAAG,GAAjB,CAAb;IACD;;IAED,OAAOF,MAAM,CAACE,aAAD,CAAb;EACD,CAZD;EAcA;;;EACA,MAAMC,eAAe,GAAIC,WAAD,IAAiB;IACvC,IAAIC,SAAS,GAAGD,WAAW,CAACN,QAAZ,GAAuBC,OAAvB,CAA+B,QAA/B,EAAyC,IAAzC,CAAhB;IACA,OAAOM,SAAP;EACD,CAHD,CA1BiC,CA+BjC;;;EACA,MAAMC,OAAO,GAAIC,SAAD,IAAe;IAC7B,MAAMC,OAAO,GAAG,EAAhB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;MACzCD,OAAO,CAACG,IAAR,eACE;QAAG,EAAE,EAAEJ,SAAS,CAACE,CAAD,CAAhB;QAAA,UACGF,SAAS,CAACE,CAAD;MADZ,GAA0BA,CAA1B;QAAA;QAAA;QAAA;MAAA,QADF;IAKD;;IACD,OAAOD,OAAP;EACD,CAVD;;EAYA,oBACE;IAAA,wBACE,QAAC,IAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,UAAD;MAAY,OAAO,EAAEnB,KAArB;MAA4B,IAAI,EAAC,SAAjC;MAA2C,MAAM,EAAED,KAAK,CAACI;IAAzD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD,CAlDM;KAAML,Q;AAoDb,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}